<div class="article-header-box" style="box-sizing: inherit; outline: 0px; margin: 0px; padding: 16px 0px 0px; border-bottom: 1px solid rgb(224, 224, 224); z-index: 9; color: rgba(0, 0, 0, 0.75); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: common-ligatures;"><div class="article-header" style="box-sizing: inherit; outline: 0px; margin: 0px; padding: 0px;"><div class="article-title-box" style="box-sizing: inherit; outline: 0px; margin: 0px 0px 8px; padding: 0px;"><h1 class="title-article" style="box-sizing: inherit; outline: 0px; margin-top: 0.67em; margin-bottom: 0.67em; font-size: 24px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; overflow-wrap: break-word;">Java 泛型方法/接口、泛型限定</h1></div><div class="article-info-box" style="box-sizing: inherit; outline: 0px; margin: 0px; padding: 0px 0px 14px; position: relative;"><div class="article-bar-top" style="box-sizing: inherit; outline: 0px; margin: 0px; padding: 0px; color: rgb(133, 133, 133); width: 846.547px; height: 24px; overflow: hidden;"><span class="time" style="box-sizing: inherit; outline: 0px; margin: 0px 14px 0px 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif;">2019-03-30 21:40:50</span>&nbsp;<a class="follow-nickName" href="https://me.csdn.net/qq_18505715" target="_blank" rel="noopener" style="box-sizing: inherit; outline: 0px; margin: 0px 14px 0px 0px; padding: 0px; color: rgb(120, 165, 241); cursor: pointer; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; background-color: transparent;">YFL_iOS</a>&nbsp;<span class="read-count" style="box-sizing: inherit; outline: 0px; margin: 0px 14px 0px 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif;">阅读数 1904</span><span class="article_info_click" style="box-sizing: inherit; outline: 0px; margin: 0px 14px 0px 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 12px; color: rgb(51, 153, 234); letter-spacing: 0px; line-height: 20px; cursor: pointer; top: 0px; right: 101px; width: 45px; display: inline-block; position: static;">更多</span><div class="tags-box space" style="box-sizing: inherit; outline: 0px; margin: 6px 0px 0px; padding: 0px; font-size: 12px;"><span class="label" style="box-sizing: inherit; outline: 0px; margin: 0px 14px 0px 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77);">分类专栏：</span>&nbsp;<a class="tag-link" target="_blank" rel="noopener" href="https://blog.csdn.net/qq_18505715/article/category/6829956" style="box-sizing: inherit; outline: 0px; margin: 0px 24px 0px 0px; padding: 0px; color: rgb(121, 165, 229); cursor: pointer; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; background-color: transparent; display: inline-block; overflow-wrap: break-word;">Java 成长之路</a></div></div><div class="operating" style="box-sizing: inherit; outline: 0px; margin: 0px; padding: 0px; position: absolute; top: 0px; right: 0px;"></div></div></div></div><article class="baidu_pl" style="box-sizing: inherit; outline: 0px; margin: 0px; padding: 16px 0px 0px; position: relative; color: rgba(0, 0, 0, 0.75); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: common-ligatures;"><div id="article_content" class="article_content clearfix" style="box-sizing: inherit; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;"><div class="article-copyright" style="box-sizing: inherit; outline: 0px; margin: 0px 0px 16px; padding: 0px; overflow-wrap: break-word; font-size: 12px; color: rgb(153, 153, 153);"><span class="creativecommons" style="box-sizing: inherit; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; overflow-wrap: break-word; color: rgb(77, 77, 77); word-break: break-all;"><a rel="license" href="http://creativecommons.org/licenses/by-sa/4.0/" style="box-sizing: inherit; outline: 0px; margin: 0px; padding: 0px; color: rgb(51, 153, 234); cursor: pointer; background-color: transparent; overflow-wrap: break-word; font-size: 14px;"></a><span style="box-sizing: inherit; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; vertical-align: text-bottom;">版权声明：本文为博主原创文章，遵循<a href="http://creativecommons.org/licenses/by-sa/4.0/" target="_blank" rel="noopener" style="box-sizing: inherit; outline: 0px; margin: 0px; padding: 0px; color: rgb(51, 153, 234); cursor: pointer; background-color: transparent; overflow-wrap: break-word; font-size: 14px;">&nbsp;CC 4.0 BY-SA&nbsp;</a>版权协议，转载请附上原文出处链接和本声明。</span><div class="article-source-link2222" style="box-sizing: inherit; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;">本文链接：<a href="https://blog.csdn.net/qq_18505715/article/details/88381607" style="box-sizing: inherit; outline: 0px; margin: 0px; padding: 0px; color: rgb(51, 153, 234); cursor: pointer; background-color: transparent; overflow-wrap: break-word; font-size: 14px;">https://blog.csdn.net/qq_18505715/article/details/88381607</a></div></span></div><div id="content_views" class="markdown_views prism-atom-one-dark" style="box-sizing: inherit; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; position: relative; min-height: 70px; word-break: break-word !important;"><pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none;"><code class="has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; line-height: 22px; color: rgb(171, 178, 191); border-radius: 4px; display: block; overflow-x: auto; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;"> 文章目录
     一、为什么要定义泛型方法
     1、从泛型类到泛型方法的演变过程
     2、定义泛型方法的好处
     二、创建一个泛型方法格式
     常用的形式
     三、泛型接口
     1、格式
     2、例子
    四、类型通配符(泛型的高级应用)
     1、什么是通配符 (?)
     2、类型通配符上限定(? extends T =&gt;可以接收T类型或者T的子类型)
     3、类型通配符下限定 (? super T =&gt; 可以接收T类型或者T父类型)
</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">4</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">5</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">6</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">7</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">8</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">9</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">10</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">11</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">12</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">13</li></ul></pre><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;"><span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">一、为什么要定义泛型方法</span></p><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;"><span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">1、从泛型类到泛型方法的演变过程</span><br style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;">我们先来看个例子</p><pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none;"><code class="has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; line-height: 22px; color: rgb(171, 178, 191); border-radius: 4px; display: block; overflow-x: auto; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;">//定义一个泛型类，并定义如下两个方法
class Test&lt;T&gt;
{
	public  void show(T t){
		System.out.println(t);
	}
     public void print(T t){
    	System.out.println(t);
  }	
  /*  以前是这样定义，现在一个方法搞定
  	public void show(String t){	
	}
	public void show(Integer t){	
	}
	或者
	public void show(Object obj){	
	}
  */
}

//在manin方法代码如下
	public static void main(String[] args) {
	   
		Test&lt;String&gt; d = new Test&lt;String&gt;();
		d.show("java");
		d.print("Object-C");
		
		Test&lt;Integer&gt; e = new Test&lt;Integer&gt;();
		e.show(2);
		e.print(new Integer(5));	
	}
</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">4</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">5</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">6</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">7</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">8</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">9</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">10</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">11</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">12</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">13</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">14</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">15</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">16</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">17</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">18</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">19</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">20</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">21</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">22</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">23</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">24</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">25</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">26</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">27</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">28</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">29</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">30</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">31</li></ul></pre><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">上面是一个简单的代码demo，运行没问题，正常输出。但是你会发现，其实代码有点冗余。我们定义了一个泛型类，并定义了&nbsp;<code style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 2px 4px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; overflow-wrap: break-word;">show(T t)</code>和<code style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 2px 4px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; overflow-wrap: break-word;">print(T t)</code>方法。发现:&nbsp;<span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">泛型类定义的泛型，在整个类中有效</span>。<span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">如果被方法使用，那么泛型类的对象明确要操作的具体类型后，所要操作的类型已经固定了</span>。就像上面main方法中。对象<code style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 2px 4px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; overflow-wrap: break-word;">d</code>，只能操作<code style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 2px 4px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; overflow-wrap: break-word;">String</code>类型,如果你要操作其他类型，只能额外去创建其他泛型对象<code style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 2px 4px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; overflow-wrap: break-word;">e</code>。</p><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">设想下，如果我能<span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">把泛型定义在方法上</span>，这样不就可以优雅解决问题。于是变化代码如下</p><pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none;"><code class="has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; line-height: 22px; color: rgb(171, 178, 191); border-radius: 4px; display: block; overflow-x: auto; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;">//定义一个类，并定义如下两个泛型方法
class Test
{
	public &lt;T&gt;  void show(T t){
		System.out.println(t);
	}
	
    public &lt;T&gt; void print(T t){
    	System.out.println(t);
  }	
   public &lt;U,T&gt; void sum(U u,T t){
	   System.out.println(u+" version is "+t);
   }
}
// main方法如下
public static void main(String[] args) {
		Test d = new Test();
		d.show("java");
		d.print(5);
		d.sum("java", new Double(8));
	}
</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">4</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">5</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">6</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">7</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">8</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">9</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">10</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">11</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">12</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">13</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">14</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">15</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">16</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">17</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">18</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">19</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">20</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">21</li></ul></pre><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;"><code style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 2px 4px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; overflow-wrap: break-word;">Test</code>不再是泛型类，泛型方法<code style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 2px 4px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; overflow-wrap: break-word;">show(T t)</code>、<code style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 2px 4px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; overflow-wrap: break-word;">print(T t)</code>、<code style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 2px 4px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; overflow-wrap: break-word;">sum(U u,T t)</code>&nbsp;更具有扩展性。</p><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;"><span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">2、定义泛型方法的好处</span></p><pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none;"><code class="has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; line-height: 22px; color: rgb(171, 178, 191); border-radius: 4px; display: block; overflow-x: auto; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;">泛型方法可以让不同方法操作不同类型，且类型还不确定。
与泛型类不同，泛型方法的类型参数只能在它锁修饰的泛型方法中使用。
</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">2</li></ul></pre><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;"><span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">二、创建一个泛型方法格式</span></p><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;"><span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">1、常用的形式</span></p><pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none;"><code class="has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; line-height: 22px; color: rgb(171, 178, 191); border-radius: 4px; display: block; overflow-x: auto; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;">访问修饰符 [static][final] &lt;类型参数列表&gt; 返回值类型 方法名([形式参数列表])
</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">1</li></ul></pre><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">备注:[] 代可有可无的意思，<span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">泛型方法可以是实例方法或静态方法，类型参数可以在静态方法中，这是与泛型类最大的区别</span>。</p><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;"><span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">三、泛型接口</span></p><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;"><span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">1、格式</span></p><pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none;"><code class="has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; line-height: 22px; color: rgb(171, 178, 191); border-radius: 4px; display: block; overflow-x: auto; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;">interface 接口名&lt;类型参数表&gt;
</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">1</li></ul></pre><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;"><span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">2、例子</span></p><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">定义一个泛型接口</p><pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none;"><code class="has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; line-height: 22px; color: rgb(171, 178, 191); border-radius: 4px; display: block; overflow-x: auto; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;">interface showInterface&lt;T&gt;
{
	public void show(T t);
	
}
</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">4</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">5</li></ul></pre><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">(1) 实现类确定了类型</p><pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none;"><code class="has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; line-height: 22px; color: rgb(171, 178, 191); border-radius: 4px; display: block; overflow-x: auto; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;">class ShowClass implements showInterface&lt;String&gt;{
	public void show(String t){
		System.out.println("show:"+t);
	}
}
</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">4</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">5</li></ul></pre><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">(2) 实现类类型不确定</p><pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none;"><code class="has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; line-height: 22px; color: rgb(171, 178, 191); border-radius: 4px; display: block; overflow-x: auto; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;">class ShowClass&lt;T&gt; implements showInterface&lt;T&gt;{
	public void show(T t){
		System.out.println("show:"+t);
	}
}
</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">4</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">5</li></ul></pre><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">main方法</p><pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none;"><code class="has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; line-height: 22px; color: rgb(171, 178, 191); border-radius: 4px; display: block; overflow-x: auto; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;">	public static void main(String[] args) {
	
		ShowClass&lt;Integer&gt; obj = new ShowClass&lt;Integer&gt;();
		obj.show(6);
        /*
		ShowClass obj = new ShowClass();
		obj.show("java");
	    */
	}
</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">4</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">5</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">6</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">7</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">8</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">9</li></ul></pre><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;"><span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">四、类型通配符(泛型的高级应用)</span></p><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;"><span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">1、什么是通配符 (?)</span><br style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;">看个例子就明白了。定义两个集合，分别输出两个集合的元素。</p><pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none;"><code class="has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; line-height: 22px; color: rgb(171, 178, 191); border-radius: 4px; display: block; overflow-x: auto; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;">	public static void main(String[] args) {

		ArrayList&lt;String&gt; a1 = new ArrayList&lt;String&gt;();
		a1.add("a");
		a1.add("b");
		a1.add("c");
		
		ArrayList&lt;Integer&gt; a2 = new ArrayList&lt;Integer&gt;();
		a2.add(1);
		a2.add(2);
		a2.add(3);
	}
</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">4</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">5</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">6</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">7</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">8</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">9</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">10</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">11</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">12</li></ul></pre><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">在我们没学习泛型之前，我们会封装静态方法如下：</p><pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none;"><code class="has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; line-height: 22px; color: rgb(171, 178, 191); border-radius: 4px; display: block; overflow-x: auto; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;">	public static void printList(ArrayList list){
	  for (Iterator iterator = list.iterator(); iterator.hasNext();) 
	  {
		Object object = (Object) iterator.next();
		System.out.println(object);	
	   }
	}
</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">4</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">5</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">6</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">7</li></ul></pre><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">代码买啥毛病，运行也正确。会有一个疑问。为什么参数没定义泛型，但是却可以接受泛型呢？泛型是jdk1.5出来的，老版本肯定要兼容新版本。</p><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">在我们学习泛型方法后，我们进一步将代码修改如下:</p><pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none;"><code class="has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; line-height: 22px; color: rgb(171, 178, 191); border-radius: 4px; display: block; overflow-x: auto; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;">	public static &lt;T&gt;void vistor(ArrayList&lt;T&gt; a){
		Iterator&lt;T&gt; iterator = a.iterator();
	    while(iterator.hasNext()){
	    	T t = iterator.next(); 
	    	System.out.println(t);
	    }
	}
</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">4</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">5</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">6</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">7</li></ul></pre><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">定义一个泛型方法。<span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">如果是泛型类，是不允许泛型定义在static上面的</span>。</p><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">如果不想定义泛型方法，又能够解决问题呢？这就要用到一个通配符的玩意</p><pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none;"><code class="has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; line-height: 22px; color: rgb(171, 178, 191); border-radius: 4px; display: block; overflow-x: auto; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;">	//占位符，也称为通配符。表示元素类型可以匹配任意类型
	public static void sop(ArrayList&lt;?&gt; a){
		for(Iterator&lt;?&gt; it = a.iterator();it.hasNext();){
			System.out.println(it.next());
		}
	}
</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">4</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">5</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">6</li></ul></pre><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">泛型方法T如果是具体类型的话，可以接收<code style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 2px 4px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; overflow-wrap: break-word;">T t = iterator.next();</code>。？是占位符，不明确具体类型，无法接收。</p><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">这种带通配符<code style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 2px 4px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; overflow-wrap: break-word;">ArrayList&lt;?&gt; a</code>的<code style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 2px 4px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; overflow-wrap: break-word;">List</code>&nbsp;仅仅表示他是<span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">各种泛型的父类</span>，并不能把元素添加到其中。</p><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">我做了奇怪的例子</p><pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none;"><code class="has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; line-height: 22px; color: rgb(171, 178, 191); border-radius: 4px; display: block; overflow-x: auto; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;"> ArrayList&lt;?&gt; list = new ArrayList&lt;String&gt;();
list.add(null);
</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">2</li></ul></pre><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">上面说，带通配符<code style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 2px 4px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; overflow-wrap: break-word;">ArrayList&lt;?&gt; a</code>的<code style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 2px 4px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; overflow-wrap: break-word;">List</code>&nbsp;仅仅表示他是<span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">各种泛型的父类</span>，并不能把元素添加到其中。是不是想违背了？仔细想想，<span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">null是任意引用类型的实例</span>。这比较特殊。</p><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;"><span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">2、类型通配符上限定(? extends T)</span></p><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">同样看一个例子. 定义一个集合，遍历元素的方法并输出。</p><pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none;"><code class="has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; line-height: 22px; color: rgb(171, 178, 191); border-radius: 4px; display: block; overflow-x: auto; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;">//定义一个Person类
class Person
{
	private String name;
	public Person(String name){
		this.name = name;
	}
	public String getNmae(){
		return this.name;
	}
}
// 定义一个Student 并继承 Person
class Student extends Person
{
	Student(String name){
		super(name);
	}
}

main方法如下
public static void main(String[] args) {
		
		ArrayList&lt;Person&gt; a1 = new ArrayList&lt;Person&gt;();
		a1.add(new Person("abc1"));
		a1.add(new Person("abc2"));
		a1.add(new Person("abc3"));

		printMethod(a1);
		
		
		// 下面是错误的。a2存的是Person，存在继承的话，也能放worker。但是等号右边只能存Student，存不进worker.类型安全问题。左右两边要一致
		ArrayList&lt;Student&gt; a2 = new ArrayList&lt;Student&gt;();
		a2.add(new Student("abc--1"));
		a2.add(new Student("abc--2"));
		a2.add(new Student("abc--3"));
		printMethod(a2); // ArrayList&lt;Person&gt; a2 = new ArrayList&lt;Student&gt;();
		//如果我想调用也printMethod(a2);没毛病。怎么做？。 第一想法直接给占位符。但是带来一问题，不能调用具体方法。
	}
	
	// 与main方法同级的静态工具类方法
	public static void printMethod(ArrayList&lt; Person&gt; a1){
		Iterator&lt;Person&gt; it = a1.iterator();
		while(it.hasNext()){
			System.out.println(it.next().getNmae());
		}
	}

</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">4</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">5</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">6</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">7</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">8</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">9</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">10</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">11</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">12</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">13</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">14</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">15</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">16</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">17</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">18</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">19</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">20</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">21</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">22</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">23</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">24</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">25</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">26</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">27</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">28</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">29</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">30</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">31</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">32</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">33</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">34</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">35</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">36</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">37</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">38</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">39</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">40</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">41</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">42</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">43</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">44</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">45</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">46</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">47</li></ul></pre><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">如果我想调用也<code style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 2px 4px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; overflow-wrap: break-word;">printMethod(a2);</code>没毛病。怎么做？。 第一想法直接给占位符。但是带来一问题，不能调用具体方法。泛型也是一样的。如果我们想两者兼得，技能打印Stuednt，也能答应Person，我们将<code style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 2px 4px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; overflow-wrap: break-word;">printMethod</code>修改如下</p><pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none;"><code class="has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; line-height: 22px; color: rgb(171, 178, 191); border-radius: 4px; display: block; overflow-x: auto; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;">	public static void printMethod(ArrayList&lt;? extends Person&gt; a1){
		Iterator&lt;? extends Person&gt; it = a1.iterator();
		while(it.hasNext()){
			System.out.println(it.next().getNmae());
		}
	}
</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">4</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">5</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">6</li></ul></pre><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">我们称<code style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 2px 4px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; overflow-wrap: break-word;">? extends T</code>&nbsp;为 泛型上限定：&nbsp;<span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">可以接收T和T的子类</span></p><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;"><span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">3、类型通配符下限定&lt;? super T&gt;</span></p><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">接收T类型或者T的父类型<br style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;"><img src="https://img-blog.csdnimg.cn/20190330175742707.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE4NTA1NzE1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" style="box-sizing: border-box; outline: 0px; margin: 24px 0px; padding: 0px; border-style: none; max-width: 100%; overflow-wrap: break-word; cursor: zoom-in;"><br style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;">从集合TreeSet的构造方法我们可以看到 下限定的运用。我们也可以集合实际例子。</p><pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none;"><code class="has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; line-height: 22px; color: rgb(171, 178, 191); border-radius: 4px; display: block; overflow-x: auto; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;">TreeSet&lt;Person&gt; ts = new TreeSet&lt;Person&gt;();  //Comparator&lt;? super E&gt; comparator
ts.add(new Person("d"));
ts.add(new Person("f"));
ts.add(new Person("g"));	
</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">4</li></ul></pre><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">比较器如下</p><pre class="prettyprint" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none;"><code class="has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0.5em; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; line-height: 22px; color: rgb(171, 178, 191); border-radius: 4px; display: block; overflow-x: auto; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset;">// 这边的T写Student和Person都是可以的
class comp implements Comparator&lt;Person&gt;
{
	public int compare(Person s1,Person s2){
		return s1.getNmae().compareTo(s2.getNmae());
	}
}

</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">4</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">5</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">6</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">7</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; border-right: 1px solid rgb(197, 197, 197); color: rgb(153, 153, 153);">8</li></ul></pre><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">其实限定的目的是为了<span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">扩展</span>指定类型。</p><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;"><span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">通过上面比较器参数和我们实现的比较器。如果我们比较器的泛型为 Student,那么只能比较Student。当未来某一天，Person有新子类出现的话，那么该比较器就不适用了。所以Java 的API 的考虑扩展性的同时，已经设置了泛型下限定，你可以传T类型或者T的父类型。</span></p></div></div></article><div class="postTime" style="box-sizing: inherit; outline: 0px; margin: 0px; padding: 0px; position: relative; overflow: hidden; color: rgba(0, 0, 0, 0.75); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: common-ligatures;"><div class="article-bar-bottom" style="box-sizing: inherit; outline: 0px; margin: 16px 0px 0px; padding: 16px 0px; border-bottom: 1px solid rgb(227, 227, 227); position: relative;"><span class="time" style="box-sizing: inherit; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; position: absolute; top: 0px; right: 0px; color: rgb(204, 204, 204); font-size: 12px;">文章最后发布于: 2019-03-30 21:40:50</span></div></div>