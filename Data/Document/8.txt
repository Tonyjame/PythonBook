<div class="article-header-box" style="box-sizing: inherit; outline: 0px; margin: 0px; padding: 16px 0px 0px; border-bottom: 1px solid rgb(224, 224, 224); z-index: 9; color: rgba(0, 0, 0, 0.75); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: common-ligatures;"><div class="article-header" style="box-sizing: inherit; outline: 0px; margin: 0px; padding: 0px;"><div class="article-title-box" style="box-sizing: inherit; outline: 0px; margin: 0px 0px 8px; padding: 0px;"><h1 class="title-article" style="box-sizing: inherit; outline: 0px; margin-top: 0.67em; margin-bottom: 0.67em; font-size: 24px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; overflow-wrap: break-word;">java 泛型详解-绝对是对泛型方法讲解最详细的，没有之一</h1></div><div class="article-info-box" style="box-sizing: inherit; outline: 0px; margin: 0px; padding: 0px 0px 14px; position: relative;"><div class="article-bar-top" style="box-sizing: inherit; outline: 0px; margin: 0px; padding: 0px; color: rgb(133, 133, 133); width: 846.547px; height: 24px; overflow: hidden;"><span class="time" style="box-sizing: inherit; outline: 0px; margin: 0px 14px 0px 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif;">2016-12-30 11:44:29</span>&nbsp;<a class="follow-nickName" href="https://me.csdn.net/s10461" target="_blank" rel="noopener" style="box-sizing: inherit; outline: 0px; margin: 0px 14px 0px 0px; padding: 0px; color: rgb(120, 165, 241); cursor: pointer; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; background-color: transparent;">VieLei</a>&nbsp;<span class="read-count" style="box-sizing: inherit; outline: 0px; margin: 0px 14px 0px 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif;">阅读数 290621</span><span class="article_info_click" style="box-sizing: inherit; outline: 0px; margin: 0px 14px 0px 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 12px; color: rgb(51, 153, 234); letter-spacing: 0px; line-height: 20px; cursor: pointer; top: 0px; right: 101px; width: 45px; display: inline-block; position: static;">更多</span><div class="tags-box space" style="box-sizing: inherit; outline: 0px; margin: 6px 0px 0px; padding: 0px; font-size: 12px;"><span class="label" style="box-sizing: inherit; outline: 0px; margin: 0px 14px 0px 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77);">分类专栏：</span>&nbsp;<a class="tag-link" target="_blank" rel="noopener" href="https://blog.csdn.net/s10461/article/category/6648802" style="box-sizing: inherit; outline: 0px; margin: 0px 24px 0px 0px; padding: 0px; color: rgb(121, 165, 229); cursor: pointer; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; background-color: transparent; display: inline-block; overflow-wrap: break-word;">java基础</a></div></div><div class="operating" style="box-sizing: inherit; outline: 0px; margin: 0px; padding: 0px; position: absolute; top: 0px; right: 0px;"></div></div></div></div><article class="baidu_pl" style="box-sizing: inherit; outline: 0px; margin: 0px; padding: 16px 0px 0px; position: relative; color: rgba(0, 0, 0, 0.75); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: common-ligatures;"><div id="article_content" class="article_content clearfix" style="box-sizing: inherit; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;"><div class="article-copyright" style="box-sizing: inherit; outline: 0px; margin: 0px 0px 16px; padding: 0px; overflow-wrap: break-word; font-size: 12px; color: rgb(153, 153, 153);"><span class="creativecommons" style="box-sizing: inherit; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; overflow-wrap: break-word; color: rgb(77, 77, 77); word-break: break-all;"><a rel="license" href="http://creativecommons.org/licenses/by-sa/4.0/" style="box-sizing: inherit; outline: 0px; margin: 0px; padding: 0px; color: rgb(51, 153, 234); cursor: pointer; background-color: transparent; overflow-wrap: break-word; font-size: 14px;"></a><span style="box-sizing: inherit; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; vertical-align: text-bottom;">版权声明：本文为博主原创文章，遵循<a href="http://creativecommons.org/licenses/by-sa/4.0/" target="_blank" rel="noopener" style="box-sizing: inherit; outline: 0px; margin: 0px; padding: 0px; color: rgb(51, 153, 234); cursor: pointer; background-color: transparent; overflow-wrap: break-word; font-size: 14px;">&nbsp;CC 4.0 BY-SA&nbsp;</a>版权协议，转载请附上原文出处链接和本声明。</span><div class="article-source-link2222" style="box-sizing: inherit; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;">本文链接：<a href="https://blog.csdn.net/s10461/article/details/53941091" style="box-sizing: inherit; outline: 0px; margin: 0px; padding: 0px; color: rgb(51, 153, 234); cursor: pointer; background-color: transparent; overflow-wrap: break-word; font-size: 14px;">https://blog.csdn.net/s10461/article/details/53941091</a></div></span></div><div id="content_views" class="markdown_views" style="box-sizing: inherit; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; position: relative; min-height: 70px; word-break: break-word !important;"><blockquote style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 16px; color: rgba(0, 0, 0, 0.5); border-left: 8px solid rgb(221, 223, 228); background: rgb(238, 240, 244); overflow: auto; overflow-wrap: break-word; word-break: break-word !important;"><p style="box-sizing: border-box; outline: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;">对java的泛型特性的了解仅限于表面的浅浅一层，直到在学习设计模式时发现有不了解的用法，才想起详细的记录一下。</p><p style="box-sizing: border-box; outline: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;">本文参考<a href="http://www.cnblogs.com/sunwei2012/archive/2010/10/08/1845938.html" rel="nofollow" data-token="44a701a2e5721e7634476d88d592f885" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; color: rgb(103, 149, 181); cursor: pointer; background-color: transparent; overflow-wrap: break-word;">java 泛型详解</a>、<a href="http://www.cnblogs.com/iyangyuan/archive/2013/04/09/3011274.html" rel="nofollow" data-token="cc46ce495bc78d98f48369008a9533b1" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; color: rgb(103, 149, 181); cursor: pointer; background-color: transparent; overflow-wrap: break-word;">Java中的泛型方法</a>、&nbsp;<a href="http://blog.csdn.net/caihuangshi/article/details/51278793" rel="nofollow" data-token="4103ff1591525a995b47499750a84154" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; color: rgb(103, 149, 181); cursor: pointer; background-color: transparent; overflow-wrap: break-word;">java泛型详解</a></p></blockquote><h1 id="1-概述" style="box-sizing: border-box; outline: 0px; margin-top: 8px; margin-bottom: 16px; font-size: 28px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(79, 79, 79); line-height: 36px; overflow-wrap: break-word;"><a name="t0" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; color: rgb(78, 161, 219); cursor: pointer; background-color: transparent; overflow-wrap: break-word;"></a>1. 概述</h1><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">泛型在java中有很重要的地位，在面向对象编程及各种设计模式中有非常广泛的应用。</p><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">什么是泛型？为什么要使用泛型？</p><blockquote style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 16px; color: rgba(0, 0, 0, 0.5); border-left: 8px solid rgb(221, 223, 228); background: rgb(238, 240, 244); overflow: auto; overflow-wrap: break-word; word-break: break-word !important;"><p style="box-sizing: border-box; outline: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;"><span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">泛型，即“参数化类型”。一提到参数，最熟悉的就是定义方法时有形参，然后调用此方法时传递实参。那么参数化类型怎么理解呢？顾名思义，就是将类型由原来的具体的类型参数化，类似于方法中的变量参数，此时类型也定义成参数形式（可以称之为类型形参），然后在使用/调用时传入具体的类型（类型实参）。</span></p><p style="box-sizing: border-box; outline: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;"><span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">泛型的本质是为了参数化类型（在不创建新的类型的情况下，通过泛型指定的不同类型来控制形参具体限制的类型）</span>。也就是说在泛型使用过程中，操作的数据类型被指定为一个参数，这种参数类型可以用在类、接口和方法中，分别被称为泛型类、泛型接口、泛型方法。</p></blockquote><h1 id="2-一个栗子" style="box-sizing: border-box; outline: 0px; margin-top: 8px; margin-bottom: 16px; font-size: 28px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(79, 79, 79); line-height: 36px; overflow-wrap: break-word;"><a name="t1" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; color: rgb(78, 161, 219); cursor: pointer; background-color: transparent; overflow-wrap: break-word;"></a>2. 一个栗子</h1><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">一个被举了无数次的例子：</p><pre class="prettyprint" name="code" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(246, 248, 250); border: none;"><code class="language-java hljs  has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; display: block; overflow-x: auto; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 22px; border-radius: 4px; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset; color: rgb(79, 79, 79) !important;">List arrayList = <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">new</span> ArrayList();
arrayList.add(<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"aaaa"</span>);
arrayList.add(<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">100</span>);

<span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">for</span>(<span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">int</span> i = <span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">0</span>; i&lt; arrayList.size();i++){
    String item = (String)arrayList.get(i);
    Log.d(<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"泛型测试"</span>,<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"item = "</span> + item);
}</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">4</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">5</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">6</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">7</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">8</li></ul></pre><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">毫无疑问，程序的运行结果会以崩溃结束：</p><pre class="prettyprint" name="code" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(246, 248, 250); border: none;"><code class="language-java hljs  has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; display: block; overflow-x: auto; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 22px; border-radius: 4px; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset; color: rgb(79, 79, 79) !important;">java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.String</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">1</li></ul></pre><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">ArrayList可以存放任意类型，例子中添加了一个String类型，添加了一个Integer类型，再使用时都以String的方式使用，因此程序崩溃了。为了解决类似这样的问题（在编译阶段就可以解决），泛型应运而生。</p><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">我们将第一行声明初始化list的代码更改一下，编译器会在编译阶段就能够帮我们发现类似这样的问题。</p><pre class="prettyprint" name="code" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(246, 248, 250); border: none;"><code class="language-java hljs  has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; display: block; overflow-x: auto; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 22px; border-radius: 4px; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset; color: rgb(79, 79, 79) !important;">List&lt;String&gt; arrayList = <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">new</span> ArrayList&lt;String&gt;();
...
<span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">//arrayList.add(100); 在编译阶段，编译器就会报错</span></code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">3</li></ul></pre><h1 id="3-特性" style="box-sizing: border-box; outline: 0px; margin-top: 8px; margin-bottom: 16px; font-size: 28px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(79, 79, 79); line-height: 36px; overflow-wrap: break-word;"><a name="t2" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; color: rgb(78, 161, 219); cursor: pointer; background-color: transparent; overflow-wrap: break-word;"></a>3. 特性</h1><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">泛型只在编译阶段有效。看下面的代码：</p><pre class="prettyprint" name="code" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(246, 248, 250); border: none;"><code class="language-java hljs  has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; display: block; overflow-x: auto; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 22px; border-radius: 4px; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset; color: rgb(79, 79, 79) !important;">List&lt;String&gt; stringArrayList = <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">new</span> ArrayList&lt;String&gt;();
List&lt;Integer&gt; integerArrayList = <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">new</span> ArrayList&lt;Integer&gt;();

Class classStringArrayList = stringArrayList.getClass();
Class classIntegerArrayList = integerArrayList.getClass();

<span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">if</span>(classStringArrayList.equals(classIntegerArrayList)){
    Log.d(<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"泛型测试"</span>,<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"类型相同"</span>);
}</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">4</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">5</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">6</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">7</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">8</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">9</li></ul></pre><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">输出结果：<code style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 2px 4px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; overflow-wrap: break-word;">D/泛型测试: 类型相同</code>。</p><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">通过上面的例子可以证明，在编译之后程序会采取去泛型化的措施。也就是说Java中的泛型，只在编译阶段有效。在编译过程中，正确检验泛型结果后，会将泛型的相关信息擦出，并且在对象进入和离开方法的边界处添加类型检查和类型转换的方法。也就是说，泛型信息不会进入到运行时阶段。</p><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;"><span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">对此总结成一句话：泛型类型在逻辑上看以看成是多个不同的类型，实际上都是相同的基本类型。</span></p><h1 id="4-泛型的使用" style="box-sizing: border-box; outline: 0px; margin-top: 8px; margin-bottom: 16px; font-size: 28px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(79, 79, 79); line-height: 36px; overflow-wrap: break-word;"><a name="t3" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; color: rgb(78, 161, 219); cursor: pointer; background-color: transparent; overflow-wrap: break-word;"></a>4. 泛型的使用</h1><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">泛型有三种使用方式，分别为：泛型类、泛型接口、泛型方法</p><h2 id="43-泛型类" style="box-sizing: border-box; outline: 0px; margin-top: 8px; margin-bottom: 16px; font-size: 24px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(79, 79, 79); line-height: 32px; overflow-wrap: break-word;"><a name="t4" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; color: rgb(78, 161, 219); cursor: pointer; background-color: transparent; overflow-wrap: break-word;"></a>4.3 泛型类</h2><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">泛型类型用于类的定义中，被称为泛型类。通过泛型可以完成对一组类的操作对外开放相同的接口。最典型的就是各种容器类，如：List、Set、Map。</p><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">泛型类的最基本写法（这么看可能会有点晕，会在下面的例子中详解）：</p><pre class="prettyprint" name="code" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(246, 248, 250); border: none;"><code class="language-java hljs  has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; display: block; overflow-x: auto; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 22px; border-radius: 4px; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset; color: rgb(79, 79, 79) !important;">class 类名称 &lt;泛型标识：可以随便写任意标识号，标识指定的泛型的类型&gt;{
  <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">private</span> 泛型标识 /*（成员变量类型）*/ var; 
  .....

  }
}</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">4</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">5</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">6</li></ul></pre><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">一个最普通的泛型类：</p><pre class="prettyprint" name="code" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(246, 248, 250); border: none;"><code class="language-java hljs  has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; display: block; overflow-x: auto; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 22px; border-radius: 4px; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset; color: rgb(79, 79, 79) !important;"><span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">//此处T可以随便写为任意标识，常见的如T、E、K、V等形式的参数常用于表示泛型</span>
<span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">//在实例化泛型类时，必须指定T的具体类型</span>
<span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> <span class="hljs-class" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: inherit; overflow-wrap: break-word;"><span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-size: inherit; overflow-wrap: break-word; color: rgb(0, 0, 136) !important;">class</span> <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-size: inherit; overflow-wrap: break-word;">Generic</span>&lt;<span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-size: inherit; overflow-wrap: break-word;">T</span>&gt;{</span> 
    <span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">//key这个成员变量的类型为T,T的类型由外部指定  </span>
    <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">private</span> T key;

    <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">Generic</span>(T key) { <span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">//泛型构造方法形参key的类型也为T，T的类型由外部指定</span>
        <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">this</span>.key = key;
    }

    <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> T <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">getKey</span>(){ <span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">//泛型方法getKey的返回值类型为T，T的类型由外部指定</span>
        <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">return</span> key;
    }
}</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">4</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">5</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">6</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">7</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">8</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">9</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">10</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">11</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">12</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">13</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">14</li></ul></pre><pre class="prettyprint" name="code" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(246, 248, 250); border: none;"><code class="language-java hljs  has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; display: block; overflow-x: auto; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 22px; border-radius: 4px; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset; color: rgb(79, 79, 79) !important;"><span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">//泛型的类型参数只能是类类型（包括自定义类），不能是简单类型</span>
<span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">//传入的实参类型需与泛型的类型参数类型相同，即为Integer.</span>
Generic&lt;Integer&gt; genericInteger = <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">new</span> Generic&lt;Integer&gt;(<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">123456</span>);

<span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">//传入的实参类型需与泛型的类型参数类型相同，即为String.</span>
Generic&lt;String&gt; genericString = <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">new</span> Generic&lt;String&gt;(<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"key_vlaue"</span>);
Log.d(<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"泛型测试"</span>,<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"key is "</span> + genericInteger.getKey());
Log.d(<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"泛型测试"</span>,<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"key is "</span> + genericString.getKey());</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">4</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">5</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">6</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">7</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">8</li></ul></pre><pre class="prettyprint" name="code" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(246, 248, 250); border: none;"><code class="language-java hljs  has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; display: block; overflow-x: auto; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 22px; border-radius: 4px; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset; color: rgb(79, 79, 79) !important;"><span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">12</span>-<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">27</span> <span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">09</span>:<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">20</span>:<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">04.432</span> <span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">13063</span>-<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">13063</span>/? D/泛型测试: key is <span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">123456</span>
<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">12</span>-<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">27</span> <span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">09</span>:<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">20</span>:<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">04.432</span> <span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">13063</span>-<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">13063</span>/? D/泛型测试: key is key_vlaue</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">2</li></ul></pre><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">定义的泛型类，就一定要传入泛型类型实参么？并不是这样，在使用泛型的时候如果传入泛型实参，则会根据传入的泛型实参做相应的限制，此时泛型才会起到本应起到的限制作用。如果不传入泛型类型实参的话，在泛型类中使用泛型的方法或成员变量定义的类型可以为任何的类型。</p><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">看一个例子：</p><pre class="prettyprint" name="code" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(246, 248, 250); border: none;"><code class="language-java hljs  has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; display: block; overflow-x: auto; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 22px; border-radius: 4px; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset; color: rgb(79, 79, 79) !important;">Generic generic = <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">new</span> Generic(<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"111111"</span>);
Generic generic1 = <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">new</span> Generic(<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">4444</span>);
Generic generic2 = <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">new</span> Generic(<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">55.55</span>);
Generic generic3 = <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">new</span> Generic(<span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">false</span>);

Log.d(<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"泛型测试"</span>,<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"key is "</span> + generic.getKey());
Log.d(<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"泛型测试"</span>,<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"key is "</span> + generic1.getKey());
Log.d(<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"泛型测试"</span>,<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"key is "</span> + generic2.getKey());
Log.d(<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"泛型测试"</span>,<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"key is "</span> + generic3.getKey());</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">4</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">5</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">6</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">7</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">8</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">9</li></ul></pre><pre class="prettyprint" name="code" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(246, 248, 250); border: none;"><code class="language-java hljs  has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; display: block; overflow-x: auto; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 22px; border-radius: 4px; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset; color: rgb(79, 79, 79) !important;">D/泛型测试: key is <span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">111111</span>
D/泛型测试: key is <span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">4444</span>
D/泛型测试: key is <span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">55.55</span>
D/泛型测试: key is <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">false</span></code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">4</li></ul></pre><blockquote style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 16px; color: rgba(0, 0, 0, 0.5); border-left: 8px solid rgb(221, 223, 228); background: rgb(238, 240, 244); overflow: auto; overflow-wrap: break-word; word-break: break-word !important;"><p style="box-sizing: border-box; outline: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;">注意：</p><ul style="box-sizing: border-box; outline: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; line-height: 22px; overflow-wrap: break-word;"><li style="box-sizing: border-box; outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; overflow-wrap: break-word;"><ol style="box-sizing: border-box; outline: 0px; margin-left: 32px; line-height: 22px; overflow-wrap: break-word;"><li style="box-sizing: border-box; outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; overflow-wrap: break-word;">泛型的类型参数只能是类类型，不能是简单类型。</li></ol></li><li style="box-sizing: border-box; outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; overflow-wrap: break-word;"><ol style="box-sizing: border-box; outline: 0px; margin-left: 32px; line-height: 22px; overflow-wrap: break-word;"><li style="box-sizing: border-box; outline: 0px; margin-top: 8px; margin-left: 40px; list-style-type: decimal; overflow-wrap: break-word;"><p style="box-sizing: border-box; outline: 0px; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;">不能对确切的泛型类型使用instanceof操作。如下面的操作是非法的，编译时会出错。</p><pre class="prettyprint" name="code" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(246, 248, 250); border: none;"><code class="language-java hljs  has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; display: block; overflow-x: auto; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 22px; border-radius: 4px; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset; color: rgb(79, 79, 79) !important;"><span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">if</span>(ex_num <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">instanceof</span> Generic&lt;Number&gt;){   
} </code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; line-height: 22px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">2</li></ul></pre></li></ol></li></ul></blockquote><h2 id="44-泛型接口" style="box-sizing: border-box; outline: 0px; margin-top: 8px; margin-bottom: 16px; font-size: 24px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(79, 79, 79); line-height: 32px; overflow-wrap: break-word;"><a name="t5" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; color: rgb(78, 161, 219); cursor: pointer; background-color: transparent; overflow-wrap: break-word;"></a>4.4 泛型接口</h2><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">泛型接口与泛型类的定义及使用基本相同。泛型接口常被用在各种类的生产器中，可以看一个例子：</p><pre class="prettyprint" name="code" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(246, 248, 250); border: none;"><code class="language-java hljs  has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; display: block; overflow-x: auto; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 22px; border-radius: 4px; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset; color: rgb(79, 79, 79) !important;"><span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">//定义一个泛型接口</span>
<span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> <span class="hljs-class" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: inherit; overflow-wrap: break-word;"><span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-size: inherit; overflow-wrap: break-word; color: rgb(0, 0, 136) !important;">interface</span> <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-size: inherit; overflow-wrap: break-word;">Generator</span>&lt;<span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-size: inherit; overflow-wrap: break-word;">T</span>&gt; {</span>
    <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> T <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">next</span>();
}</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">4</li></ul></pre><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">当实现泛型接口的类，未传入泛型实参时：</p><pre class="prettyprint" name="code" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(246, 248, 250); border: none;"><code class="language-java hljs  has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; display: block; overflow-x: auto; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 22px; border-radius: 4px; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset; color: rgb(79, 79, 79) !important;"><span class="hljs-javadoc" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: inherit; overflow-wrap: break-word; color: rgb(136, 0, 0) !important;">/**
 * 未传入泛型实参时，与泛型类的定义相同，在声明类的时候，需将泛型的声明也一起加到类中
 * 即：class FruitGenerator&lt;T&gt; implements Generator&lt;T&gt;{
 * 如果不声明泛型，如：class FruitGenerator implements Generator&lt;T&gt;，编译器会报错："Unknown class"
 */</span>
class FruitGenerator&lt;T&gt; implements Generator&lt;T&gt;{
    <span class="hljs-annotation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: inherit; overflow-wrap: break-word; color: rgb(155, 133, 157) !important;">@Override</span>
    <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> T <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">next</span>() {
        <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">return</span> <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">null</span>;
    }
}</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">4</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">5</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">6</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">7</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">8</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">9</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">10</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">11</li></ul></pre><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">当实现泛型接口的类，传入泛型实参时：</p><pre class="prettyprint" name="code" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(246, 248, 250); border: none;"><code class="language-java hljs  has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; display: block; overflow-x: auto; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 22px; border-radius: 4px; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset; color: rgb(79, 79, 79) !important;"><span class="hljs-javadoc" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: inherit; overflow-wrap: break-word; color: rgb(136, 0, 0) !important;">/**
 * 传入泛型实参时：
 * 定义一个生产器实现这个接口,虽然我们只创建了一个泛型接口Generator&lt;T&gt;
 * 但是我们可以为T传入无数个实参，形成无数种类型的Generator接口。
 * 在实现类实现泛型接口时，如已将泛型类型传入实参类型，则所有使用泛型的地方都要替换成传入的实参类型
 * 即：Generator&lt;T&gt;，public T next();中的的T都要替换成传入的String类型。
 */</span>
<span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> <span class="hljs-class" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: inherit; overflow-wrap: break-word;"><span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-size: inherit; overflow-wrap: break-word; color: rgb(0, 0, 136) !important;">class</span> <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-size: inherit; overflow-wrap: break-word;">FruitGenerator</span> <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-size: inherit; overflow-wrap: break-word; color: rgb(0, 0, 136) !important;">implements</span> <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-size: inherit; overflow-wrap: break-word;">Generator</span>&lt;<span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-size: inherit; overflow-wrap: break-word;">String</span>&gt; {</span>

    <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">private</span> String[] fruits = <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">new</span> String[]{<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"Apple"</span>, <span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"Banana"</span>, <span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"Pear"</span>};

    <span class="hljs-annotation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: inherit; overflow-wrap: break-word; color: rgb(155, 133, 157) !important;">@Override</span>
    <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> String <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">next</span>() {
        Random rand = <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">new</span> Random();
        <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">return</span> fruits[rand.nextInt(<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">3</span>)];
    }
}</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">4</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">5</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">6</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">7</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">8</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">9</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">10</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">11</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">12</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">13</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">14</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">15</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">16</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">17</li></ul></pre><h2 id="45-泛型通配符" style="box-sizing: border-box; outline: 0px; margin-top: 8px; margin-bottom: 16px; font-size: 24px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(79, 79, 79); line-height: 32px; overflow-wrap: break-word;"><a name="t6" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; color: rgb(78, 161, 219); cursor: pointer; background-color: transparent; overflow-wrap: break-word;"></a>4.5 泛型通配符</h2><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">我们知道<code style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 2px 4px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; overflow-wrap: break-word;">Ingeter</code>是<code style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 2px 4px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; overflow-wrap: break-word;">Number</code>的一个子类，同时在特性章节中我们也验证过<code style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 2px 4px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; overflow-wrap: break-word;">Generic&lt;Ingeter&gt;</code>与<code style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 2px 4px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; overflow-wrap: break-word;">Generic&lt;Number&gt;</code>实际上是相同的一种基本类型。那么问题来了，在使用<code style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 2px 4px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; overflow-wrap: break-word;">Generic&lt;Number&gt;</code>作为形参的方法中，能否使用<code style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 2px 4px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; overflow-wrap: break-word;">Generic&lt;Ingeter&gt;</code>的实例传入呢？在逻辑上类似于<code style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 2px 4px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; overflow-wrap: break-word;">Generic&lt;Number&gt;</code>和<code style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 2px 4px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; overflow-wrap: break-word;">Generic&lt;Ingeter&gt;</code>是否可以看成具有父子关系的泛型类型呢？</p><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">为了弄清楚这个问题，我们使用<code style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 2px 4px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; overflow-wrap: break-word;">Generic&lt;T&gt;</code>这个泛型类继续看下面的例子：</p><pre class="prettyprint" name="code" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(246, 248, 250); border: none;"><code class="language-java hljs  has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; display: block; overflow-x: auto; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 22px; border-radius: 4px; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset; color: rgb(79, 79, 79) !important;"><span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">void</span> <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">showKeyValue1</span>(Generic&lt;Number&gt; obj){
    Log.d(<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"泛型测试"</span>,<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"key value is "</span> + obj.getKey());
}</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">3</li></ul></pre><pre class="prettyprint" name="code" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(246, 248, 250); border: none;"><code class="language-java hljs  has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; display: block; overflow-x: auto; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 22px; border-radius: 4px; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset; color: rgb(79, 79, 79) !important;">Generic&lt;Integer&gt; gInteger = <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">new</span> Generic&lt;Integer&gt;(<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">123</span>);
Generic&lt;Number&gt; gNumber = <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">new</span> Generic&lt;Number&gt;(<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">456</span>);

showKeyValue(gNumber);

<span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">// showKeyValue这个方法编译器会为我们报错：Generic&lt;java.lang.Integer&gt; </span>
<span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">// cannot be applied to Generic&lt;java.lang.Number&gt;</span>
<span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">// showKeyValue(gInteger);</span></code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">4</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">5</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">6</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">7</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">8</li></ul></pre><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">通过提示信息我们可以看到<code style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 2px 4px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; overflow-wrap: break-word;">Generic&lt;Integer&gt;</code>不能被看作为<code style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 2px 4px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; overflow-wrap: break-word;">`Generic&lt;Number&gt;</code>的子类。由此可以看出:<span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">同一种泛型可以对应多个版本（因为参数类型是不确定的），不同版本的泛型类实例是不兼容的</span>。</p><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">回到上面的例子，如何解决上面的问题？总不能为了定义一个新的方法来处理<code style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 2px 4px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; overflow-wrap: break-word;">Generic&lt;Integer&gt;</code>类型的类，这显然与java中的多台理念相违背。因此我们需要一个在逻辑上可以表示<span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">同时</span>是<code style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 2px 4px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; overflow-wrap: break-word;">Generic&lt;Integer&gt;</code>和<code style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 2px 4px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; line-height: 22px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 2px; overflow-wrap: break-word;">Generic&lt;Number&gt;</code>父类的引用类型。由此类型通配符应运而生。</p><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">我们可以将上面的方法改一下：</p><pre class="prettyprint" name="code" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(246, 248, 250); border: none;"><code class="language-java hljs  has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; display: block; overflow-x: auto; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 22px; border-radius: 4px; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset; color: rgb(79, 79, 79) !important;"><span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">void</span> <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">showKeyValue1</span>(Generic&lt;?&gt; obj){
    Log.d(<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"泛型测试"</span>,<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"key value is "</span> + obj.getKey());
}</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">3</li></ul></pre><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">类型通配符一般是使用？代替具体的类型实参，注意了，<span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">此处’？’是类型实参，而不是类型形参</span>&nbsp;。重要说三遍！<span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">此处’？’是类型实参，而不是类型形参</span>&nbsp;！&nbsp;<span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">此处’？’是类型实参，而不是类型形参</span>&nbsp;！再直白点的意思就是，此处的？和Number、String、Integer一样都是一种实际的类型，可以把？看成所有类型的父类。是一种真实的类型。</p><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">可以解决当具体类型不确定的时候，这个通配符就是&nbsp;<span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">?</span>&nbsp;&nbsp;；当操作类型时，不需要使用类型的具体功能时，只使用Object类中的功能。那么可以用 ? 通配符来表未知类型。</p><h2 id="46-泛型方法" style="box-sizing: border-box; outline: 0px; margin-top: 8px; margin-bottom: 16px; font-size: 24px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(79, 79, 79); line-height: 32px; overflow-wrap: break-word;"><a name="t7" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; color: rgb(78, 161, 219); cursor: pointer; background-color: transparent; overflow-wrap: break-word;"></a>4.6 泛型方法</h2><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">在java中,泛型类的定义非常简单，但是泛型方法就比较复杂了。</p><blockquote style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 16px; color: rgba(0, 0, 0, 0.5); border-left: 8px solid rgb(221, 223, 228); background: rgb(238, 240, 244); overflow: auto; overflow-wrap: break-word; word-break: break-word !important;"><p style="box-sizing: border-box; outline: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;">尤其是我们见到的大多数泛型类中的成员方法也都使用了泛型，有的甚至泛型类中也包含着泛型方法，这样在初学者中非常容易将泛型方法理解错了。</p></blockquote><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;"><span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">泛型类，是在实例化类的时候指明泛型的具体类型；泛型方法，是在调用方法的时候指明泛型的具体类型</span>&nbsp;。</p><pre class="prettyprint" name="code" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(246, 248, 250); border: none;"><code class="language-java hljs  has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; display: block; overflow-x: auto; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 22px; border-radius: 4px; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset; color: rgb(79, 79, 79) !important;"><span class="hljs-javadoc" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: inherit; overflow-wrap: break-word; color: rgb(136, 0, 0) !important;">/**
 * 泛型方法的基本介绍
 *<span class="hljs-javadoctag" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-size: inherit; overflow-wrap: break-word; color: rgb(79, 79, 79) !important;"> @param</span> tClass 传入的泛型实参
 *<span class="hljs-javadoctag" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-size: inherit; overflow-wrap: break-word; color: rgb(79, 79, 79) !important;"> @return</span> T 返回值为T类型
 * 说明：
 *     1）public 与 返回值中间&lt;T&gt;非常重要，可以理解为声明此方法为泛型方法。
 *     2）只有声明了&lt;T&gt;的方法才是泛型方法，泛型类中的使用了泛型的成员方法并不是泛型方法。
 *     3）&lt;T&gt;表明该方法将使用泛型类型T，此时才可以在方法中使用泛型类型T。
 *     4）与泛型类的定义一样，此处T可以随便写为任意标识，常见的如T、E、K、V等形式的参数常用于表示泛型。
 */</span>
<span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> &lt;T&gt; T <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">genericMethod</span>(Class&lt;T&gt; tClass)<span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">throws</span> InstantiationException ,
  IllegalAccessException{
        T instance = tClass.newInstance();
        <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">return</span> instance;
}</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">4</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">5</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">6</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">7</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">8</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">9</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">10</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">11</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">12</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">13</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">14</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">15</li></ul></pre><pre class="prettyprint" name="code" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(246, 248, 250); border: none;"><code class="language-java hljs  has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; display: block; overflow-x: auto; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 22px; border-radius: 4px; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset; color: rgb(79, 79, 79) !important;">Object obj = genericMethod(Class.forName(<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"com.test.test"</span>));</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">1</li></ul></pre><h3 id="461-泛型方法的基本用法" style="box-sizing: border-box; outline: 0px; margin-top: 8px; margin-bottom: 16px; font-size: 22px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(79, 79, 79); line-height: 30px; overflow-wrap: break-word;"><a name="t8" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; color: rgb(78, 161, 219); cursor: pointer; background-color: transparent; overflow-wrap: break-word;"></a>4.6.1 泛型方法的基本用法</h3><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">光看上面的例子有的同学可能依然会非常迷糊，我们再通过一个例子，把我泛型方法再总结一下。</p><pre class="prettyprint" name="code" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(246, 248, 250); border: none;"><code class="language-java hljs  has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; display: block; overflow-x: auto; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 22px; border-radius: 4px; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset; color: rgb(79, 79, 79) !important;"><span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> <span class="hljs-class" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: inherit; overflow-wrap: break-word;"><span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-size: inherit; overflow-wrap: break-word; color: rgb(0, 0, 136) !important;">class</span> <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-size: inherit; overflow-wrap: break-word;">GenericTest</span> {</span>
   <span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">//这个类是个泛型类，在上面已经介绍过</span>
   <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> <span class="hljs-class" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: inherit; overflow-wrap: break-word;"><span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-size: inherit; overflow-wrap: break-word; color: rgb(0, 0, 136) !important;">class</span> <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-size: inherit; overflow-wrap: break-word;">Generic</span>&lt;<span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-size: inherit; overflow-wrap: break-word;">T</span>&gt;{</span>     
        <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">private</span> T key;

        <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">Generic</span>(T key) {
            <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">this</span>.key = key;
        }

        <span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">//我想说的其实是这个，虽然在方法中使用了泛型，但是这并不是一个泛型方法。</span>
        <span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">//这只是类中一个普通的成员方法，只不过他的返回值是在声明泛型类已经声明过的泛型。</span>
        <span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">//所以在这个方法中才可以继续使用 T 这个泛型。</span>
        <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> T <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">getKey</span>(){
            <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">return</span> key;
        }

        <span class="hljs-javadoc" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: inherit; overflow-wrap: break-word; color: rgb(136, 0, 0) !important;">/**
         * 这个方法显然是有问题的，在编译器会给我们提示这样的错误信息"cannot reslove symbol E"
         * 因为在类的声明中并未声明泛型E，所以在使用E做形参和返回值类型时，编译器会无法识别。
        public E setKey(E key){
             this.key = keu
        }
        */</span>
    }

    <span class="hljs-javadoc" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: inherit; overflow-wrap: break-word; color: rgb(136, 0, 0) !important;">/** 
     * 这才是一个真正的泛型方法。
     * 首先在public与返回值之间的&lt;T&gt;必不可少，这表明这是一个泛型方法，并且声明了一个泛型T
     * 这个T可以出现在这个泛型方法的任意位置.
     * 泛型的数量也可以为任意多个 
     *    如：public &lt;T,K&gt; K showKeyName(Generic&lt;T&gt; container){
     *        ...
     *        }
     */</span>
    <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> &lt;T&gt; T <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">showKeyName</span>(Generic&lt;T&gt; container){
        System.out.println(<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"container key :"</span> + container.getKey());
        <span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">//当然这个例子举的不太合适，只是为了说明泛型方法的特性。</span>
        T test = container.getKey();
        <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">return</span> test;
    }

    <span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">//这也不是一个泛型方法，这就是一个普通的方法，只是使用了Generic&lt;Number&gt;这个泛型类做形参而已。</span>
    <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">void</span> <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">showKeyValue1</span>(Generic&lt;Number&gt; obj){
        Log.d(<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"泛型测试"</span>,<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"key value is "</span> + obj.getKey());
    }

    <span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">//这也不是一个泛型方法，这也是一个普通的方法，只不过使用了泛型通配符?</span>
    <span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">//同时这也印证了泛型通配符章节所描述的，?是一种类型实参，可以看做为Number等所有类的父类</span>
    <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">void</span> <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">showKeyValue2</span>(Generic&lt;?&gt; obj){
        Log.d(<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"泛型测试"</span>,<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"key value is "</span> + obj.getKey());
    }

     <span class="hljs-javadoc" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: inherit; overflow-wrap: break-word; color: rgb(136, 0, 0) !important;">/**
     * 这个方法是有问题的，编译器会为我们提示错误信息："UnKnown class 'E' "
     * 虽然我们声明了&lt;T&gt;,也表明了这是一个可以处理泛型的类型的泛型方法。
     * 但是只声明了泛型类型T，并未声明泛型类型E，因此编译器并不知道该如何处理E这个类型。
    public &lt;T&gt; T showKeyName(Generic&lt;E&gt; container){
        ...
    }  
    */</span>

    <span class="hljs-javadoc" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: inherit; overflow-wrap: break-word; color: rgb(136, 0, 0) !important;">/**
     * 这个方法也是有问题的，编译器会为我们提示错误信息："UnKnown class 'T' "
     * 对于编译器来说T这个类型并未项目中声明过，因此编译也不知道该如何编译这个类。
     * 所以这也不是一个正确的泛型方法声明。
    public void showkey(T genericObj){

    }
    */</span>

    <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">static</span> <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">void</span> <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">main</span>(String[] args) {


    }
}</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">4</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">5</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">6</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">7</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">8</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">9</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">10</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">11</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">12</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">13</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">14</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">15</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">16</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">17</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">18</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">19</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">20</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">21</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">22</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">23</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">24</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">25</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">26</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">27</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">28</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">29</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">30</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">31</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">32</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">33</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">34</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">35</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">36</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">37</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">38</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">39</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">40</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">41</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">42</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">43</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">44</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">45</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">46</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">47</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">48</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">49</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">50</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">51</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">52</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">53</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">54</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">55</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">56</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">57</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">58</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">59</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">60</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">61</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">62</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">63</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">64</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">65</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">66</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">67</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">68</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">69</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">70</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">71</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">72</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">73</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">74</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">75</li></ul></pre><h3 id="462-类中的泛型方法" style="box-sizing: border-box; outline: 0px; margin-top: 8px; margin-bottom: 16px; font-size: 22px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(79, 79, 79); line-height: 30px; overflow-wrap: break-word;"><a name="t9" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; color: rgb(78, 161, 219); cursor: pointer; background-color: transparent; overflow-wrap: break-word;"></a>4.6.2 类中的泛型方法</h3><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">当然这并不是泛型方法的全部，泛型方法可以出现杂任何地方和任何场景中使用。但是有一种情况是非常特殊的，当泛型方法出现在泛型类中时，我们再通过一个例子看一下</p><pre class="prettyprint" name="code" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(246, 248, 250); border: none;"><code class="language-java hljs  has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; display: block; overflow-x: auto; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 22px; border-radius: 4px; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset; color: rgb(79, 79, 79) !important;"><span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> <span class="hljs-class" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: inherit; overflow-wrap: break-word;"><span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-size: inherit; overflow-wrap: break-word; color: rgb(0, 0, 136) !important;">class</span> <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-size: inherit; overflow-wrap: break-word;">GenericFruit</span> {</span>
    class Fruit{
        <span class="hljs-annotation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: inherit; overflow-wrap: break-word; color: rgb(155, 133, 157) !important;">@Override</span>
        <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> String <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">toString</span>() {
            <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">return</span> <span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"fruit"</span>;
        }
    }

    class Apple extends Fruit{
        <span class="hljs-annotation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: inherit; overflow-wrap: break-word; color: rgb(155, 133, 157) !important;">@Override</span>
        <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> String <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">toString</span>() {
            <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">return</span> <span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"apple"</span>;
        }
    }

    class Person{
        <span class="hljs-annotation" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: inherit; overflow-wrap: break-word; color: rgb(155, 133, 157) !important;">@Override</span>
        <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> String <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">toString</span>() {
            <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">return</span> <span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"Person"</span>;
        }
    }

    class GenerateTest&lt;T&gt;{
        <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">void</span> <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">show_1</span>(T t){
            System.out.println(t.toString());
        }

        <span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">//在泛型类中声明了一个泛型方法，使用泛型E，这种泛型E可以为任意类型。可以类型与T相同，也可以不同。</span>
        <span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">//由于泛型方法在声明的时候会声明泛型&lt;E&gt;，因此即使在泛型类中并未声明泛型，编译器也能够正确识别泛型方法中识别的泛型。</span>
        <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> &lt;E&gt; <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">void</span> <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">show_3</span>(E t){
            System.out.println(t.toString());
        }

        <span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">//在泛型类中声明了一个泛型方法，使用泛型T，注意这个T是一种全新的类型，可以与泛型类中声明的T不是同一种类型。</span>
        <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> &lt;T&gt; <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">void</span> <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">show_2</span>(T t){
            System.out.println(t.toString());
        }
    }

    <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">static</span> <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">void</span> <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">main</span>(String[] args) {
        Apple apple = <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">new</span> Apple();
        Person person = <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">new</span> Person();

        GenerateTest&lt;Fruit&gt; generateTest = <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">new</span> GenerateTest&lt;Fruit&gt;();
        <span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">//apple是Fruit的子类，所以这里可以</span>
        generateTest.show_1(apple);
        <span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">//编译器会报错，因为泛型类型实参指定的是Fruit，而传入的实参类是Person</span>
        <span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">//generateTest.show_1(person);</span>

        <span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">//使用这两个方法都可以成功</span>
        generateTest.show_2(apple);
        generateTest.show_2(person);

        <span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">//使用这两个方法也都可以成功</span>
        generateTest.show_3(apple);
        generateTest.show_3(person);
    }
}</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">4</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">5</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">6</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">7</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">8</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">9</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">10</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">11</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">12</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">13</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">14</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">15</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">16</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">17</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">18</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">19</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">20</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">21</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">22</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">23</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">24</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">25</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">26</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">27</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">28</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">29</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">30</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">31</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">32</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">33</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">34</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">35</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">36</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">37</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">38</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">39</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">40</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">41</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">42</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">43</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">44</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">45</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">46</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">47</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">48</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">49</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">50</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">51</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">52</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">53</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">54</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">55</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">56</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">57</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">58</li></ul></pre><h3 id="463-泛型方法与可变参数" style="box-sizing: border-box; outline: 0px; margin-top: 8px; margin-bottom: 16px; font-size: 22px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(79, 79, 79); line-height: 30px; overflow-wrap: break-word;"><a name="t10" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; color: rgb(78, 161, 219); cursor: pointer; background-color: transparent; overflow-wrap: break-word;"></a>4.6.3 泛型方法与可变参数</h3><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">再看一个泛型方法和可变参数的例子：</p><pre class="prettyprint" name="code" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(246, 248, 250); border: none;"><code class="language-java hljs  has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; display: block; overflow-x: auto; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 22px; border-radius: 4px; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset; color: rgb(79, 79, 79) !important;"><span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> &lt;T&gt; <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">void</span> <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">printMsg</span>( T... args){
    <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">for</span>(T t : args){
        Log.d(<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"泛型测试"</span>,<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"t is "</span> + t);
    }
}</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">4</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">5</li></ul></pre><pre class="prettyprint" name="code" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(246, 248, 250); border: none;"><code class="language-java hljs  has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; display: block; overflow-x: auto; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 22px; border-radius: 4px; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset; color: rgb(79, 79, 79) !important;">printMsg(<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"111"</span>,<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">222</span>,<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"aaaa"</span>,<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"2323.4"</span>,<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">55.55</span>);</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">1</li></ul></pre><h3 id="464-静态方法与泛型" style="box-sizing: border-box; outline: 0px; margin-top: 8px; margin-bottom: 16px; font-size: 22px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(79, 79, 79); line-height: 30px; overflow-wrap: break-word;"><a name="t11" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; color: rgb(78, 161, 219); cursor: pointer; background-color: transparent; overflow-wrap: break-word;"></a>4.6.4 静态方法与泛型</h3><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">静态方法有一种情况需要注意一下，那就是在类中的静态方法使用泛型：<span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">静态方法无法访问类上定义的泛型；如果静态方法操作的引用数据类型不确定的时候，必须要将泛型定义在方法上。</span></p><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">即：<span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">如果静态方法要使用泛型的话，必须将静态方法也定义成泛型方法</span>&nbsp;。</p><pre class="prettyprint" name="code" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(246, 248, 250); border: none;"><code class="language-java hljs  has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; display: block; overflow-x: auto; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 22px; border-radius: 4px; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset; color: rgb(79, 79, 79) !important;"><span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> <span class="hljs-class" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: inherit; overflow-wrap: break-word;"><span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-size: inherit; overflow-wrap: break-word; color: rgb(0, 0, 136) !important;">class</span> <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-size: inherit; overflow-wrap: break-word;">StaticGenerator</span>&lt;<span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-size: inherit; overflow-wrap: break-word;">T</span>&gt; {</span>
    ....
    ....
    <span class="hljs-javadoc" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: inherit; overflow-wrap: break-word; color: rgb(136, 0, 0) !important;">/**
     * 如果在类中定义使用泛型的静态方法，需要添加额外的泛型声明（将这个方法定义成泛型方法）
     * 即使静态方法要使用泛型类中已经声明过的泛型也不可以。
     * 如：public static void show(T t){..},此时编译器会提示错误信息：
          "StaticGenerator cannot be refrenced from static context"
     */</span>
    <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">static</span> &lt;T&gt; <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">void</span> <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">show</span>(T t){

    }
}</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">4</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">5</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">6</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">7</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">8</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">9</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">10</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">11</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">12</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">13</li></ul></pre><h3 id="465-泛型方法总结" style="box-sizing: border-box; outline: 0px; margin-top: 8px; margin-bottom: 16px; font-size: 22px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(79, 79, 79); line-height: 30px; overflow-wrap: break-word;"><a name="t12" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; color: rgb(78, 161, 219); cursor: pointer; background-color: transparent; overflow-wrap: break-word;"></a>4.6.5 泛型方法总结</h3><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">泛型方法能使方法独立于类而产生变化，以下是一个基本的指导原则：</p><blockquote style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 16px; color: rgba(0, 0, 0, 0.5); border-left: 8px solid rgb(221, 223, 228); background: rgb(238, 240, 244); overflow: auto; overflow-wrap: break-word; word-break: break-word !important;"><p style="box-sizing: border-box; outline: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;">无论何时，如果你能做到，你就该尽量使用泛型方法。也就是说，如果使用泛型方法将整个类泛型化，那么就应该使用泛型方法。另外对于一个static的方法而已，无法访问泛型类型的参数。所以如果static方法要使用泛型能力，就必须使其成为泛型方法。</p></blockquote><h2 id="46-泛型上下边界" style="box-sizing: border-box; outline: 0px; margin-top: 8px; margin-bottom: 16px; font-size: 24px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(79, 79, 79); line-height: 32px; overflow-wrap: break-word;"><a name="t13" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; color: rgb(78, 161, 219); cursor: pointer; background-color: transparent; overflow-wrap: break-word;"></a>4.6 泛型上下边界</h2><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">在使用泛型的时候，我们还可以为传入的泛型类型实参进行上下边界的限制，如：类型实参只准传入某种类型的父类或某种类型的子类。</p><ul style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word;"><li style="box-sizing: border-box; outline: 0px; margin-top: 8px; margin-left: 32px; list-style-type: disc; overflow-wrap: break-word;"><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">为泛型添加上边界，即传入的类型实参必须是指定类型的子类型</p><blockquote style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 16px; color: rgba(0, 0, 0, 0.5); border-left: 8px solid rgb(221, 223, 228); background: rgb(238, 240, 244); overflow: auto; overflow-wrap: break-word; word-break: break-word !important;"><p style="box-sizing: border-box; outline: 0px; font-size: 14px; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;"></p></blockquote></li></ul><pre class="prettyprint" name="code" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(246, 248, 250); border: none;"><code class="language-java hljs  has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; display: block; overflow-x: auto; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 22px; border-radius: 4px; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset; color: rgb(79, 79, 79) !important;"><span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">void</span> <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">showKeyValue1</span>(Generic&lt;? extends Number&gt; obj){
    Log.d(<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"泛型测试"</span>,<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"key value is "</span> + obj.getKey());
}</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">3</li></ul></pre><pre class="prettyprint" name="code" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(246, 248, 250); border: none;"><code class="language-java hljs  has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; display: block; overflow-x: auto; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 22px; border-radius: 4px; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset; color: rgb(79, 79, 79) !important;">Generic&lt;String&gt; generic1 = <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">new</span> Generic&lt;String&gt;(<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"11111"</span>);
Generic&lt;Integer&gt; generic2 = <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">new</span> Generic&lt;Integer&gt;(<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">2222</span>);
Generic&lt;Float&gt; generic3 = <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">new</span> Generic&lt;Float&gt;(<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">2.4</span>f);
Generic&lt;Double&gt; generic4 = <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">new</span> Generic&lt;Double&gt;(<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">2.56</span>);

<span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">//这一行代码编译器会提示错误，因为String类型并不是Number类型的子类</span>
<span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">//showKeyValue1(generic1);</span>

showKeyValue1(generic2);
showKeyValue1(generic3);
showKeyValue1(generic4);</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">4</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">5</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">6</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">7</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">8</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">9</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">10</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">11</li></ul></pre><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">如果我们把泛型类的定义也改一下:</p><pre class="prettyprint" name="code" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(246, 248, 250); border: none;"><code class="language-java hljs  has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; display: block; overflow-x: auto; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 22px; border-radius: 4px; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset; color: rgb(79, 79, 79) !important;"><span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> <span class="hljs-class" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: inherit; overflow-wrap: break-word;"><span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-size: inherit; overflow-wrap: break-word; color: rgb(0, 0, 136) !important;">class</span> <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-size: inherit; overflow-wrap: break-word;">Generic</span>&lt;<span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-size: inherit; overflow-wrap: break-word;">T</span> <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-size: inherit; overflow-wrap: break-word; color: rgb(0, 0, 136) !important;">extends</span> <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-size: inherit; overflow-wrap: break-word;">Number</span>&gt;{</span>
    <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">private</span> T key;

    <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">Generic</span>(T key) {
        <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">this</span>.key = key;
    }

    <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> T <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">getKey</span>(){
        <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">return</span> key;
    }
}</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">4</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">5</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">6</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">7</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">8</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">9</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">10</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">11</li></ul></pre><pre class="prettyprint" name="code" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(246, 248, 250); border: none;"><code class="language-java hljs  has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; display: block; overflow-x: auto; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 22px; border-radius: 4px; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset; color: rgb(79, 79, 79) !important;"><span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">//这一行代码也会报错，因为String不是Number的子类</span>
Generic&lt;String&gt; generic1 = <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">new</span> Generic&lt;String&gt;(<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"11111"</span>);</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">2</li></ul></pre><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">再来一个泛型方法的例子：</p><pre class="prettyprint" name="code" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(246, 248, 250); border: none;"><code class="language-java hljs  has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; display: block; overflow-x: auto; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 22px; border-radius: 4px; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset; color: rgb(79, 79, 79) !important;"><span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">//在泛型方法中添加上下边界限制的时候，必须在权限声明与返回值之间的&lt;T&gt;上添加上下边界，即在泛型声明的时候添加</span>
<span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">//public &lt;T&gt; T showKeyName(Generic&lt;T extends Number&gt; container)，编译器会报错："Unexpected bound"</span>
<span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">public</span> &lt;T extends Number&gt; T <span class="hljs-title" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">showKeyName</span>(Generic&lt;T&gt; container){
    System.out.println(<span class="hljs-string" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 153, 0) !important; font-size: inherit; overflow-wrap: break-word;">"container key :"</span> + container.getKey());
    T test = container.getKey();
    <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">return</span> test;
}</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">4</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">5</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">6</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">7</li></ul></pre><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">通过上面的两个例子可以看出：<span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">泛型的上下边界添加，必须与泛型的声明在一起</span>&nbsp;。</p><h2 id="47-关于泛型数组要提一下" style="box-sizing: border-box; outline: 0px; margin-top: 8px; margin-bottom: 16px; font-size: 24px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(79, 79, 79); line-height: 32px; overflow-wrap: break-word;"><a name="t14" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; color: rgb(78, 161, 219); cursor: pointer; background-color: transparent; overflow-wrap: break-word;"></a>4.7 关于泛型数组要提一下</h2><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">看到了很多文章中都会提起泛型数组，经过查看sun的说明文档，在java中是<span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">”不能创建一个确切的泛型类型的数组”</span>的。</p><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">也就是说下面的这个例子是不可以的：</p><pre class="prettyprint" name="code" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(246, 248, 250); border: none;"><code class="language-java hljs  has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; display: block; overflow-x: auto; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 22px; border-radius: 4px; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset; color: rgb(79, 79, 79) !important;">List&lt;String&gt;[] ls = <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">new</span> ArrayList&lt;String&gt;[<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">10</span>];  </code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">1</li></ul></pre><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">而使用通配符创建泛型数组是可以的，如下面这个例子：</p><pre class="prettyprint" name="code" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(246, 248, 250); border: none;"><code class="language-java hljs  has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; display: block; overflow-x: auto; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 22px; border-radius: 4px; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset; color: rgb(79, 79, 79) !important;">List&lt;?&gt;[] ls = <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">new</span> ArrayList&lt;?&gt;[<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">10</span>];  </code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">1</li></ul></pre><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">这样也是可以的：</p><pre class="prettyprint" name="code" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(246, 248, 250); border: none;"><code class="language-java hljs  has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; display: block; overflow-x: auto; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 22px; border-radius: 4px; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset; color: rgb(79, 79, 79) !important;">List&lt;String&gt;[] ls = <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">new</span> ArrayList[<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">10</span>];</code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">1</li></ul></pre><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">下面使用<a href="http://docs.oracle.com/javase/tutorial/extra/generics/fineprint.html" rel="nofollow" data-token="09d6a20e3e711280ad526014ebd0d615" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; color: rgb(103, 149, 181); cursor: pointer; background-color: transparent; overflow-wrap: break-word;">Sun</a><a href="http://docs.oracle.com/javase/tutorial/extra/generics/fineprint.html" rel="nofollow" data-token="09d6a20e3e711280ad526014ebd0d615" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; color: rgb(103, 149, 181); cursor: pointer; background-color: transparent; overflow-wrap: break-word;">的一篇文档</a>的一个例子来说明这个问题：</p><pre class="prettyprint" name="code" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(246, 248, 250); border: none;"><code class="language-java hljs  has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; display: block; overflow-x: auto; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 22px; border-radius: 4px; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset; color: rgb(79, 79, 79) !important;">List&lt;String&gt;[] lsa = <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">new</span> List&lt;String&gt;[<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">10</span>]; <span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">// Not really allowed.    </span>
Object o = lsa;    
Object[] oa = (Object[]) o;    
List&lt;Integer&gt; li = <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">new</span> ArrayList&lt;Integer&gt;();    
li.add(<span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">new</span> Integer(<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">3</span>));    
oa[<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">1</span>] = li; <span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">// Unsound, but passes run time store check    </span>
String s = lsa[<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">1</span>].get(<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">0</span>); <span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">// Run-time error: ClassCastException.</span></code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">4</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">5</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">6</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">7</li></ul></pre><blockquote style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 16px; color: rgba(0, 0, 0, 0.5); border-left: 8px solid rgb(221, 223, 228); background: rgb(238, 240, 244); overflow: auto; overflow-wrap: break-word; word-break: break-word !important;"><p style="box-sizing: border-box; outline: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;">这种情况下，由于JVM泛型的擦除机制，在运行时JVM是不知道泛型信息的，所以可以给oa[1]赋上一个ArrayList而不会出现异常，但是在取出数据的时候却要做一次类型转换，所以就会出现ClassCastException，如果可以进行泛型数组的声明，上面说的这种情况在编译期将不会出现任何的警告和错误，只有在运行时才会出错。</p><p style="box-sizing: border-box; outline: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;">而对泛型数组的声明进行限制，对于这样的情况，可以在编译期提示代码有类型安全问题，比没有任何提示要强很多。</p></blockquote><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">下面采用通配符的方式是被允许的:<span style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;">数组的类型不可以是类型变量，除非是采用通配符的方式</span>，因为对于通配符的方式，最后取出数据是要做显式的类型转换的。</p><pre class="prettyprint" name="code" style="box-sizing: border-box; outline: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; overflow: auto hidden; line-height: 22px; color: rgb(0, 0, 0); overflow-wrap: break-word; background-color: rgb(246, 248, 250); border: none;"><code class="language-java hljs  has-numbering" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 8px; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; display: block; overflow-x: auto; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; line-height: 22px; border-radius: 4px; overflow-wrap: break-word; min-width: 94%; text-size-adjust: none; position: unset; color: rgb(79, 79, 79) !important;">List&lt;?&gt;[] lsa = <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">new</span> List&lt;?&gt;[<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">10</span>]; <span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">// OK, array of unbounded wildcard type.    </span>
Object o = lsa;    
Object[] oa = (Object[]) o;    
List&lt;Integer&gt; li = <span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">new</span> ArrayList&lt;Integer&gt;();    
li.add(<span class="hljs-keyword" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 0, 136) !important; font-size: inherit; overflow-wrap: break-word;">new</span> Integer(<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">3</span>));    
oa[<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">1</span>] = li; <span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">// Correct.    </span>
Integer i = (Integer) lsa[<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">1</span>].get(<span class="hljs-number" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(0, 102, 102) !important; font-size: inherit; overflow-wrap: break-word;">0</span>); <span class="hljs-comment" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(136, 0, 0) !important; font-style: italic; font-size: inherit; overflow-wrap: break-word;">// OK </span><div class="hljs-button {2}" data-title="复制" style="box-sizing: border-box; outline: 0px; margin: 2px 8px; padding: 2px 8px; position: absolute; right: 4px; top: 4px; font-size: inherit; color: rgb(77, 77, 77); background-color: white; border-radius: 4px; cursor: pointer; box-shadow: rgba(0, 0, 0, 0.05) 0px 2px 4px, rgba(0, 0, 0, 0.05) 0px 2px 4px; overflow-wrap: break-word;"></div></code><ul class="pre-numbering" style="box-sizing: border-box; outline: 0px; padding-top: 8px; padding-bottom: 8px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; overflow-wrap: break-word; position: absolute; width: 48px; background-color: rgb(238, 240, 244); top: 0px; left: 0px; text-align: right;"><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">1</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">2</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">3</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">4</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">5</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">6</li><li style="box-sizing: border-box; outline: 0px; padding-right: 8px; padding-left: 8px; font-size: inherit; list-style: none; overflow-wrap: break-word; color: rgb(153, 153, 153);">7</li></ul></pre><h1 id="5-最后" style="box-sizing: border-box; outline: 0px; margin-top: 8px; margin-bottom: 16px; font-size: 28px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(79, 79, 79); line-height: 36px; overflow-wrap: break-word;"><a name="t15" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; color: rgb(78, 161, 219); cursor: pointer; background-color: transparent; overflow-wrap: break-word;"></a>5. 最后</h1><p style="box-sizing: border-box; outline: 0px; margin-bottom: 16px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 16px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;">本文中的例子主要是为了阐述泛型中的一些思想而简单举出的，并不一定有着实际的可用性。另外，一提到泛型，相信大家用到最多的就是在集合中，其实，在实际的编程过程中，自己可以使用泛型去简化开发，且能很好的保证代码质量。</p></div></div></article><div class="postTime" style="box-sizing: inherit; outline: 0px; margin: 0px; padding: 0px; position: relative; overflow: hidden; color: rgba(0, 0, 0, 0.75); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: common-ligatures;"><div class="article-bar-bottom" style="box-sizing: inherit; outline: 0px; margin: 16px 0px 0px; padding: 16px 0px; border-bottom: 1px solid rgb(227, 227, 227); position: relative;"><span class="time" style="box-sizing: inherit; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; position: absolute; top: 0px; right: 0px; color: rgb(204, 204, 204); font-size: 12px;">文章最后发布于: 2016-12-30 11:44:29</span></div></div>